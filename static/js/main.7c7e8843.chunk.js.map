{"version":3,"sources":["utils/drawFunctions.js","constants/styleConstants.js","components/ColorPanel/colorPanelSlice.js","components/ThemeSidebar/themeSidebarSlice.js","components/ButtonGradientBorder/ButtonGradientBorder.js","components/SaveThemePopup/SaveThemePopup.js","components/ThemeDesignSwitcher/themeDesignSwitcherSlice.js","components/ThemeDesignSwitcher/ThemeDesignSwitcher.js","components/ColorPanel/ColorPanel.js","components/Icon/icons.svg","components/Icon/Icon.js","assets/blueBubble.jpg","components/InterfaceBoard/components/MusicPlayer.js","components/InterfaceBoard/components/CheckBox.js","components/InterfaceBoard/components/TimeLine.js","components/InterfaceBoard/components/IconBage.js","components/InterfaceBoard/components/IconButton.js","constants/interfaceBoardConstants.js","components/InterfaceBoard/components/PillarBar.js","components/InterfaceBoard/components/Pagination.js","components/InterfaceBoard/components/DropDown.js","components/InterfaceBoard/InterfaceBoard.js","constants/themesConstants.js","components/ThemeSidebar/ThemeSidebar.js","components/app/App.js","store/index.js","index.js"],"names":["lightenDarkenColor","color","percent","num","parseInt","slice","amt","Math","round","R","G","B","toString","createBoxShadow","outside","pos","x","y","x1","y1","blur","gradient","initialState","colors","layout","main","disabled","primary","secondary","text","colorPanelSlice","createSlice","name","reducers","colorsSetting","state","action","payload","setDefaultColors","actions","reducer","themeSidebarSlice","activeTheme","userThemes","setActiveTheme","userThemesSetting","ButtonGradientBorder","type","textColor","primaryColor","secondaryColor","handler","buttonText","className","style","onClick","id","width","height","viewBox","x2","y2","offset","stopColor","rx","ry","SaveThemePopup","isNeuromorphic","shadowColor","gradientColor","shadowInner","buttonShadowLayout","useState","themeName","setThemeName","dispatch","useDispatch","useSelector","themes","inputBorder","onChangeValue","useCallback","e","value","target","onSubmit","preventDefault","savedTheme","title","deletable","localStorage","setItem","JSON","stringify","tempUserThemes","Object","assign","push","trigger","background","boxShadow","modal","nested","close","onChange","placeholder","border","themeDesignSwitcherSlice","themeStyle","changeThemeStyle","ThemeDesignSwitcher","shadowInnerMain","switchThemeHandler","ColorPanel","shadowOut","buttonShadow","colorHandler","colorName","resetHandler","entries","map","item","Icon","iconColor","fill","xlinkHref","IconsSVG","MusicPlayer","shadowOutMain","activeThemeTitle","iconBorderStyle","sliderBackground","lineHeight","lineLeftPosition","src","picture","alt","left","CheckBox","checkedLeft","setCheckedLeft","checkedRight","setCheckedRight","onChekedLeft","onChekedRight","positionLeft","positionRight","backgroundLeft","backgroundRight","pointerBgLeft","pointerBgRight","TimeLine","items","textContent","time","dotColor","contentColor","titleColor","line","index","IconBage","IconButton","backgroundColor","PILLAR_BARS","PillarBar","gradientColorVert","Pagination","activePage","setActivePage","onActivePage","PaginationList","styled","ul","DropDown","dropDownItems","triangle","activeShadow","InterfaceBoard","THEMES","ThemeSidebar","values","parse","themesList","useEffect","onThemeChange","theme","onThemeDelete","removeItem","filteredThemes","filter","onActiveTheme","ThemeList","App","linear","degrees","degreesVert","from","to","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c7e8843.chunk.js","sourcesContent":["export function lightenDarkenColor(color, percent) {\r\n    let num = parseInt(color.slice(1),16),\r\n        amt = Math.round(2.55 * percent),\r\n        R = (num >> 16) + amt,\r\n        G = (num >> 8 & 0x00FF) + amt,\r\n        B = (num & 0x0000FF) + amt;\r\n    return \"#\" + (0x1000000 + (R<255?R<1?0:R:255)*0x10000 + (G<255?G<1?0:G:255)*0x100 + (B<255?B<1?0:B:255)).toString(16).slice(1);\r\n}\r\n\r\nexport function createBoxShadow(outside, color) {\r\n    let pos = outside ? '' : 'inset',\r\n        x = outside ? '-4px' : '-3px',\r\n        y = outside ? '-2px' : '-3px',\r\n        x1 = outside ? '4px' : '2px',\r\n        y1 = outside ? '3px' : '2px',\r\n        blur = outside ? '16px' : '7px';\r\n\r\n    return `${pos} ${x} ${y} ${blur} ${lightenDarkenColor(color, 25)}, ${pos} ${x1} ${y1} ${blur} ${lightenDarkenColor(color, -25)}`\r\n}","export const gradient = {\r\n    linear: \"linear-gradient\",\r\n    degrees: \"90deg\",\r\n    degreesVert: \"-180deg\",\r\n    from: \"0.15%\",\r\n    to: \"108%\",\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    colors: {\r\n        layout: '#DBDBDB',\r\n        main: '#E5E5E5',\r\n        disabled: '#C8C8CE',\r\n        primary: '#FF9D4D',\r\n        secondary: '#FF4C56',\r\n        text: '#0F0E0E'\r\n    },\r\n}\r\n\r\nconst colorPanelSlice = createSlice({\r\n    name: 'colors',\r\n    initialState,\r\n    reducers: {\r\n        colorsSetting: (state, action) => {\r\n            state.colors = action.payload;\r\n        },\r\n        setDefaultColors: state => {state.colors = initialState.colors},\r\n    },\r\n});\r\n\r\nconst {actions, reducer} = colorPanelSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n    colorsSetting,\r\n    setDefaultColors,\r\n} = actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    activeTheme: '',\r\n    userThemes: [],\r\n}\r\n\r\nconst themeSidebarSlice = createSlice({\r\n    name: 'themes',\r\n    initialState,\r\n    reducers: {\r\n        setActiveTheme: (state, action) => {\r\n            state.activeTheme = action.payload;\r\n        },\r\n        userThemesSetting: (state, action) => {\r\n            state.userThemes = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nconst {actions, reducer} = themeSidebarSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n    setActiveTheme,\r\n    userThemesSetting,\r\n} = actions;","import './buttonGradientBorder.scss';\r\n\r\nconst ButtonGradientBorder =  ({\r\n    type,\r\n    textColor,\r\n    primaryColor,\r\n    secondaryColor, \r\n    handler, \r\n    buttonText}) => {\r\n\r\n    return (\r\n        <button\r\n            type={type}\r\n            className=\"btnGradientBorder\"\r\n            style={{color: textColor}}\r\n            onClick={handler}\r\n        >\r\n            <svg id=\"storage\" width=\"0\" height=\"0\" viewBox=\"0 0 0 0\">\r\n                <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"10%\">\r\n                    <stop offset=\"0%\" stopColor={primaryColor}></stop>\r\n                    <stop offset=\"100%\" stopColor={secondaryColor}></stop>\r\n                </linearGradient>  \r\n            </svg>\r\n            <svg className=\"gradientBorder\">\r\n                <rect rx=\"10\" ry=\"10\" x=\"3\" y=\"3\" />\r\n            </svg>\r\n            {buttonText}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonGradientBorder;","import Popup from 'reactjs-popup';\r\nimport { useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userThemesSetting } from '../ThemeSidebar/themeSidebarSlice'; \r\nimport ButtonGradientBorder from '../ButtonGradientBorder/ButtonGradientBorder';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport './saveThemePopup.scss';\r\n\r\nconst SaveThemePopup = ({\r\n    isNeuromorphic, \r\n    shadowColor, \r\n    gradientColor, \r\n    shadowInner, \r\n    buttonShadowLayout\r\n}) => {\r\n    const [themeName, setThemeName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const { colors } = useSelector(state => state.colors);\r\n    const {layout, main, primary, secondary, disabled, text} = colors;\r\n\r\n    const { userThemes } = useSelector(state => state.themes);\r\n\r\n    const inputBorder = isNeuromorphic ? 'none' : `1px solid ${disabled}`;\r\n\r\n    const onChangeValue = useCallback(\r\n        (e) => {\r\n            const value = e.target.value;\r\n            setThemeName(value);\r\n        },[]);\r\n\r\n    const onSubmit = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n    \r\n            const savedTheme = {\r\n                title: themeName,\r\n                deletable: true,\r\n                colors,\r\n            }\r\n\r\n            localStorage.setItem(`${themeName}`, JSON.stringify(savedTheme));\r\n            const tempUserThemes = Object.assign([], userThemes);\r\n            tempUserThemes.push(savedTheme);\r\n            dispatch(userThemesSetting(tempUserThemes));\r\n            setThemeName('');\r\n        },[themeName, colors, userThemes, dispatch]);\r\n\r\n    return (\r\n        <Popup\r\n            trigger={<button\r\n                    type=\"button\"\r\n                    className=\"buttonColor\"\r\n                    style={{background: gradientColor,\r\n                            boxShadow: shadowColor,\r\n                            color: main}}>\r\n                        Save as\r\n                    </button>}\r\n            modal\r\n            nested\r\n        >\r\n        {close => (\r\n            <div className=\"modal\" style={{background: layout}}>\r\n                <button \r\n                    className=\"close\" \r\n                    onClick={() => {\r\n                        setThemeName('');\r\n                        close();\r\n                    }}\r\n                >\r\n                    &times;\r\n                </button>\r\n                <div className=\"header\" style={{color: text}}> Name your theme </div>\r\n                <div className=\"content\">\r\n                    <form className=\"modalForm\" onSubmit={onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={themeName}\r\n                            onChange={onChangeValue}\r\n                            placeholder=\"Theme name...\"\r\n                            style={{border: inputBorder,\r\n                                    color: text,\r\n                                    boxShadow:shadowInner \r\n                            }}\r\n                        />\r\n\r\n                        <div className=\"actions\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"buttonColor\"\r\n                                onClick={(e) => {\r\n                                    onSubmit(e);\r\n                                    close();\r\n                                }}\r\n                                style={{background: gradientColor,\r\n                                        boxShadow: shadowColor,\r\n                                        color: main}}\r\n                            >\r\n                                Save\r\n                            </button>\r\n                            {isNeuromorphic && (\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                        setThemeName('');\r\n                                        close();\r\n                                    }}\r\n                                    style={{background: `transparent`,\r\n                                            boxShadow: buttonShadowLayout,\r\n                                            color: text}}\r\n                                >\r\n                                    Close\r\n                                </button>\r\n                            )}\r\n                            {!isNeuromorphic && (\r\n                                <ButtonGradientBorder\r\n                                type=\"reset\"\r\n                                textColor={text}\r\n                                primaryColor={primary}\r\n                                secondaryColor={secondary}\r\n                                handler={() => {\r\n                                    setThemeName('');\r\n                                    close();\r\n                                }}\r\n                                buttonText=\"Close\"\r\n                            />\r\n                            )}\r\n                            \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </Popup>\r\n    )\r\n}\r\n\r\nexport default SaveThemePopup;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    themeStyle: 'flat',\r\n}\r\n\r\nconst themeDesignSwitcherSlice = createSlice({\r\n    name: 'themeStyle',\r\n    initialState,\r\n    reducers: {\r\n        changeThemeStyle: (state, action) => {\r\n            state.themeStyle = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nconst {actions, reducer} = themeDesignSwitcherSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n    changeThemeStyle,\r\n} = actions;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useCallback } from 'react';\r\nimport { changeThemeStyle } from './themeDesignSwitcherSlice'; \r\n\r\nimport './themeDesignSwitcher.scss';\r\n\r\nconst ThemeDesignSwitcher = ({isNeuromorphic, shadowInnerMain}) => {\r\n    const { themeStyle } = useSelector(state => state.themeStyle);\r\n    const { colors } = useSelector(state => state.colors);\r\n    const { disabled, text, main } = colors;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const switchThemeHandler = useCallback(\r\n        (e) => {\r\n            const value = e.target.value;\r\n            dispatch(changeThemeStyle(value));\r\n        },[dispatch]);\r\n    \r\n    const inputBorder = isNeuromorphic ? 'none' : `1px solid ${disabled}`;\r\n\r\n    return (\r\n        <select \r\n            value={themeStyle}\r\n            onChange={switchThemeHandler}\r\n            style={{border: inputBorder,\r\n                    boxShadow: shadowInnerMain,\r\n                    color: text,\r\n                    background: main\r\n            }}\r\n        >\r\n            <option value=\"flat\">flat</option>\r\n            <option value=\"neuromorphic\">neuromorphic</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default ThemeDesignSwitcher;","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { colorsSetting, setDefaultColors } from './colorPanelSlice';\r\nimport { setActiveTheme } from '../ThemeSidebar/themeSidebarSlice';\r\nimport SaveThemePopup from '../SaveThemePopup/SaveThemePopup';\r\nimport ThemeDesignSwitcher from '../ThemeDesignSwitcher/ThemeDesignSwitcher';\r\nimport ButtonGradientBorder from '../ButtonGradientBorder/ButtonGradientBorder';\r\n\r\nimport './colorPanel.scss';\r\n\r\nconst ColorPanel = ({\r\n    isNeuromorphic,\r\n    shadowOut,\r\n    shadowInnerMain,\r\n    shadowColor,\r\n    gradientColor,\r\n    buttonShadow,\r\n    shadowInner,\r\n    buttonShadowLayout\r\n}) => {\r\n    const { colors } = useSelector(state => state.colors);\r\n    const { main, primary, secondary, text, disabled } = colors;\r\n    const dispatch = useDispatch();\r\n\r\n    const colorHandler = useCallback(\r\n        (e, colorName) => {\r\n            const value = e.target.value;\r\n            dispatch(colorsSetting({\r\n                ...colors,\r\n                [colorName]: value,\r\n            }));\r\n        },[colors, dispatch]);\r\n\r\n    const resetHandler = useCallback(\r\n        () => {\r\n            dispatch(setDefaultColors());\r\n            dispatch(setActiveTheme(''));\r\n        },[dispatch]);\r\n\r\n    return (\r\n        <div\r\n            className='colorPanel'\r\n            style={{background: main,\r\n                    boxShadow: shadowOut}}\r\n        >\r\n            <h1 style={{color: text}}>Choose colors of your theme</h1>\r\n            <div className=\"inputBar\">\r\n                <ul>\r\n                    {Object.entries(colors).map((item) => (\r\n                        <li\r\n                            key={item[0]}>\r\n                            <label>\r\n                                {item[0]}:\r\n                                <input\r\n                                    type=\"color\"\r\n                                    className=\"inputColor\"\r\n                                    style={{border: `1px solid ${disabled}`}}\r\n                                    value={item[1]} \r\n                                    onChange={(e) => colorHandler(e, item[0])}\r\n                                />\r\n                            </label>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                \r\n            </div>\r\n            <div className=\"designBar\">\r\n                Choose Design:\r\n                <ThemeDesignSwitcher\r\n                    isNeuromorphic={isNeuromorphic}\r\n                    shadowInnerMain={shadowInnerMain}\r\n                /> \r\n            </div>\r\n            <div className=\"buttonsBar\">\r\n                <SaveThemePopup\r\n                    isNeuromorphic={isNeuromorphic}\r\n                    shadowColor={shadowColor}\r\n                    gradientColor={gradientColor}\r\n                    shadowInner={shadowInner}\r\n                    buttonShadowLayout={buttonShadowLayout}\r\n                />\r\n\r\n                {isNeuromorphic && (\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={resetHandler}\r\n                        style={{background: `transparent`,\r\n                                boxShadow: buttonShadow,\r\n                                color: text}}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                )}\r\n\r\n                {!isNeuromorphic && (\r\n                    <ButtonGradientBorder\r\n                        type=\"button\"\r\n                        textColor={text}\r\n                        primaryColor={primary}\r\n                        secondaryColor={secondary}\r\n                        handler={resetHandler}\r\n                        buttonText=\"Reset\"\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPanel;","export default __webpack_public_path__ + \"static/media/icons.9c64cfcc.svg\";","import IconsSVG from './icons.svg';\r\n\r\nfunction Icon ({name, className, iconColor, onClick}) {\r\n\r\n    return(\r\n        <svg \r\n            className={`icon icon-${name} ${className}`} \r\n            fill={iconColor} \r\n            onClick={onClick}\r\n        >\r\n            <use xlinkHref={`${IconsSVG}#${name}`} />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Icon;","export default __webpack_public_path__ + \"static/media/blueBubble.d276bdd3.jpg\";","import { useSelector } from 'react-redux';\r\nimport Icon from '../../Icon/Icon';\r\nimport picture from '../../../assets/blueBubble.jpg';\r\nimport './musicPlayer.scss';\r\n\r\nconst MusicPlayer = ({colors, isNeuromorphic, gradientColor, shadowOut, shadowOutMain, shadowInnerMain}) => {\r\n    const { activeTheme } = useSelector(state => state.themes);\r\n    const { main, disabled, text } = colors;\r\n\r\n    const activeThemeTitle = activeTheme ? activeTheme.slice(0, 50) : 'Active Theme Title';\r\n\r\n    const iconBorderStyle = isNeuromorphic ? 'none' : `1px solid ${disabled}`;\r\n    const sliderBackground = isNeuromorphic ? 'transparent' : disabled;\r\n    const lineHeight = isNeuromorphic ? '60%' : '99%';\r\n    const lineLeftPosition = isNeuromorphic ? '0.2rem' : '0';\r\n\r\n    return (\r\n        <div\r\n            className='musicPlayer'\r\n            style={{background: main,\r\n                boxShadow: shadowOut}}\r\n        >\r\n            <div className='musicPlayer__image'>\r\n                <img  src={picture} alt=\"galaxy\" />\r\n            </div>\r\n            <div className='musicPlayer__content'>\r\n                <h3>{activeThemeTitle}</h3>\r\n                <div className='musicPlayer__slider'>\r\n                    <div \r\n                        className='musicPlayer__slider--path'\r\n                        style={{background: sliderBackground,\r\n                                boxShadow: shadowInnerMain}}>\r\n                        <div \r\n                            className='musicPlayer__slider--line' \r\n                            style={{background: gradientColor,\r\n                                    height: lineHeight,\r\n                                    left: lineLeftPosition}}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className='musicPlayer__slider--time'\r\n                        style={{color: disabled}}\r\n                    >\r\n                        -00:45\r\n                    </div>\r\n                </div>\r\n                <div className='musicPlayer__playerButtons'>\r\n                    <div \r\n                        className='musicPlayer__icon' \r\n                        style={{border: iconBorderStyle, boxShadow: shadowOutMain}}\r\n                    >\r\n                        <Icon\r\n                            name='stop'\r\n                            iconColor={disabled}\r\n                        />\r\n                    </div>\r\n                    <div \r\n                        className='musicPlayer__icon' \r\n                        style={{border: iconBorderStyle, boxShadow: shadowOutMain}}\r\n                    >\r\n                        <Icon\r\n                            name='play'\r\n                            iconColor={text}\r\n                        />\r\n                    </div>\r\n                    <div \r\n                        className='musicPlayer__icon' \r\n                        style={{border: iconBorderStyle, boxShadow: shadowOutMain}}\r\n                    >\r\n                        <Icon\r\n                            name='pause'\r\n                            iconColor={disabled}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicPlayer;","import { useCallback, useState } from 'react';\r\nimport './checkBox.scss';\r\n\r\nconst CheckBox = ({main, isNeuromorphic, gradientColor, shadowOutMain, shadowInnerMain }) => {\r\n\r\n    const [checkedLeft, setCheckedLeft] = useState(false);\r\n    const [checkedRight, setCheckedRight] = useState(true);\r\n\r\n    const onChekedLeft = useCallback(() => {\r\n        setCheckedLeft(!checkedLeft);\r\n    }, [checkedLeft]);\r\n\r\n    const onChekedRight = useCallback(() => {\r\n        setCheckedRight(!checkedRight);\r\n    }, [checkedRight]);\r\n\r\n    const positionLeft = checkedLeft ? '0.3rem' : '2.7rem';\r\n    const positionRight = checkedRight ? '0.3rem' : '2.7rem';\r\n\r\n    const backgroundLeft = checkedLeft && !isNeuromorphic ? gradientColor : main;\r\n    const backgroundRight = checkedRight && !isNeuromorphic ? gradientColor : main;\r\n\r\n    const pointerBgLeft = !checkedLeft ? gradientColor : main;\r\n    const pointerBgRight = !checkedRight ? gradientColor : main;\r\n\r\n    return (\r\n        <div className='checkBoxBar'>\r\n            <div \r\n                className='checkboxWrapper'\r\n                onClick={onChekedLeft}\r\n                style={{background: backgroundLeft, boxShadow: shadowInnerMain}}\r\n            >\r\n                <div\r\n                    className='checkboxPointer'\r\n                    style={{left: positionLeft,\r\n                        background: pointerBgLeft, \r\n                        boxShadow: shadowOutMain}}\r\n                />\r\n            </div>\r\n            <span>Light</span>\r\n            <div\r\n                className='checkboxWrapper'\r\n                onClick={onChekedRight}\r\n                style={{background: backgroundRight, boxShadow: shadowInnerMain}}\r\n            >\r\n                <div\r\n                    className='checkboxPointer'\r\n                    style={{left: positionRight,\r\n                        background: pointerBgRight,\r\n                        boxShadow: shadowOutMain}}\r\n                />\r\n            </div>\r\n            <span>Dark</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox;","import './timeLine.scss';\r\n\r\nconst TimeLine = ({colors, gradientColor, shadowOut}) => {\r\n    const { main, disabled, text } = colors;\r\n    \r\n    const items = [{\r\n        title: 'London',\r\n        textContent: 'Online meeting',\r\n        time: '10:45 AM',\r\n        dotColor: disabled,\r\n        contentColor: main,\r\n        titleColor: text,\r\n        textColor: disabled,\r\n        line: true,\r\n    },\r\n    {\r\n        title: 'Moscow',\r\n        textContent: 'Office meeting',\r\n        time: '09:00 AM',\r\n        dotColor: gradientColor,\r\n        contentColor: gradientColor,\r\n        titleColor: main,\r\n        textColor: main,\r\n        line: true,\r\n    },\r\n    {\r\n        title: 'Oslo',\r\n        textContent: 'Town Hall',\r\n        time: '06:30 PM',\r\n        dotColor: disabled,\r\n        contentColor: main,\r\n        titleColor: text,\r\n        textColor: disabled,\r\n        line: false,\r\n    }]\r\n\r\n    return (\r\n        <ul className=\"timeLine__list\">\r\n            {items.map(({title, textContent, time, dotColor, contentColor, titleColor, textColor, line}, index) => (\r\n                        <li key={index}>\r\n                        <div className=\"timeLine__separator\">\r\n                            <span className=\"timeLine__dot\" style={{background: dotColor, boxShadow: shadowOut}}></span>\r\n                            {line && (\r\n                                <span className=\"timeLine__line\" style={{background: disabled}}></span>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"timeLine__content\" style={{background: contentColor, boxShadow: shadowOut}}>\r\n                            <h4 className=\"timeLine__title\" style={{color: titleColor}}>{title}</h4>\r\n                            <p className=\"timeLine__text\" style={{color: textColor}}>{textContent}</p>\r\n                            <span className=\"timeLine__time\" style={{color: textColor}}>{time}</span>\r\n                        </div>\r\n                    </li>\r\n                    ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TimeLine;","import Icon from '../../Icon/Icon';\r\nimport './iconBage.scss';\r\n\r\nconst IconBage = ({main, disabled, gradientColor, shadowOut }) => {\r\n    return (\r\n        <div className=\"iconBage\" style={{boxShadow: shadowOut}}>\r\n            <Icon\r\n                name='chat-bubble'\r\n                iconColor={disabled}\r\n            />\r\n            <span style={{background: gradientColor, color: main}}>3</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconBage;","import Icon from '../../Icon/Icon';\r\nimport './iconButton.scss';\r\n\r\nconst IconButton = ({main, disabled, isNeuromorphic, gradientColor, shadowInner}) => {\r\n\r\n    const backgroundColor = isNeuromorphic ? 'transparent' : gradientColor;\r\n    const iconColor = isNeuromorphic ? disabled: main;\r\n\r\n    return (\r\n        <div className=\"iconButton\" style={{boxShadow: shadowInner, background: backgroundColor}}>\r\n            <Icon\r\n                name='settings'\r\n                iconColor={iconColor}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconButton;","export const PILLAR_BARS = [{\r\n    height: '3rem',\r\n    name: 'Mon',\r\n},\r\n{\r\n    height: '4.5rem',\r\n    name: 'Tue',\r\n},\r\n{\r\n    height: '6.5rem',\r\n    name: 'Wen',\r\n},\r\n{\r\n    height: '4.5rem',\r\n    name: 'Thu',\r\n},\r\n{\r\n    height: '3rem',\r\n    name: 'Fri',\r\n}]\r\n\r\n","import { PILLAR_BARS } from '../../../constants/interfaceBoardConstants';\r\nimport './pillarBar.scss';\r\n\r\nconst PillarBar = ({gradientColorVert, shadowInner}) => {\r\n    return (\r\n        <ul className=\"pillarBar__list\">\r\n            {PILLAR_BARS.map(({height, name}, index) => (\r\n                        <li key={index}>\r\n                            <div className=\"pillarBar__wrap\" style={{boxShadow: shadowInner}}>\r\n                                <div \r\n                                    className=\"pillarBar__column\" \r\n                                    style={{background: gradientColorVert, height: height}}\r\n                                />\r\n                            </div>\r\n                            <span className=\"pillarBar__text\">{name}</span>\r\n                        </li>\r\n                    ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PillarBar;","import { useState, useCallback } from 'react';\r\nimport Icon from '../../Icon/Icon';\r\nimport styled from 'styled-components';\r\n\r\nimport './pagination.scss';\r\n\r\nconst Pagination = ({themeStyle, text, main, disabled, gradientColor, shadowOut, shadowInnerMain}) => {\r\n    const paginationArr = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\n    const [activePage, setActivePage] = useState(7);\r\n\r\n    const onActivePage = useCallback(\r\n        (item) => {\r\n            setActivePage(item);\r\n        },[]);\r\n\r\n    const PaginationList = styled.ul`\r\n        &.neuromorphic {\r\n            li {\r\n                &.activePage {\r\n                    background: transparent;\r\n                    box-shadow: ${shadowInnerMain};\r\n                    color: ${text};\r\n                }\r\n            }\r\n        }\r\n        li {\r\n            &.activePage {\r\n                background: ${gradientColor};\r\n                color: ${main};\r\n            }\r\n        }\r\n    `;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <div className=\"pagination__arrow\">\r\n                <Icon\r\n                    name='play'\r\n                    iconColor={disabled}\r\n                />\r\n            </div>\r\n            <PaginationList className={themeStyle} style={{background: main, boxShadow: shadowOut}}>\r\n                {paginationArr.map((item, index) => (\r\n                    <li \r\n                        key={index}\r\n                        className={activePage === item ? 'activePage' : ''}\r\n                        onClick={() => onActivePage(item)}\r\n                    >\r\n                        {item}\r\n                    </li>\r\n                ))}\r\n            </PaginationList>\r\n            <div>\r\n                <Icon\r\n                    name='play'\r\n                    iconColor={disabled}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import Icon from '../../Icon/Icon';\r\nimport './dropDown.scss';\r\n\r\nconst DropDown = ({ main, text, gradientColor, shadowColor, shadowInnerMain }) => {\r\n    \r\n    const dropDownItems = [{\r\n        title: 'Dashboard',\r\n        backgroundColor: 'transparent',\r\n        textColor: main,\r\n        triangle: true,\r\n        activeShadow: 'none'\r\n    },\r\n    {\r\n        title: 'Settings',\r\n        backgroundColor: main,\r\n        textColor: text,\r\n        triangle: false,\r\n        activeShadow: shadowInnerMain\r\n    },\r\n    {\r\n        title: 'Contacts',\r\n        backgroundColor: 'transparent',\r\n        textColor: main,\r\n        triangle: false,\r\n        activeShadow: 'none'\r\n    }]\r\n\r\n    return (\r\n        <ul className=\"dropDown\" style={{background: gradientColor, boxShadow: shadowColor}}>\r\n            {dropDownItems.map(({title, backgroundColor, textColor, triangle, activeShadow}, index) => (\r\n                <li key={index} style={{background: backgroundColor, color: textColor, boxShadow: activeShadow}}>\r\n                    {title}\r\n                    {triangle && (\r\n                        <Icon\r\n                        name='play'\r\n                        iconColor={main}\r\n                    />\r\n                    )}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default DropDown;","import { useSelector } from 'react-redux';\r\nimport MusicPlayer from './components/MusicPlayer';\r\nimport CheckBox from './components/CheckBox';\r\nimport TimeLine from './components/TimeLine';\r\nimport IconBage from './components/IconBage';\r\nimport IconButton from './components/IconButton';\r\nimport PillarBar from './components/PillarBar';\r\nimport Pagination from './components/Pagination';\r\nimport DropDown from './components/DropDown';\r\nimport './interfaceBoard.scss';\r\n\r\nconst InterfaceBoard = ({\r\n    isNeuromorphic,\r\n    shadowColor,\r\n    shadowOut,\r\n    shadowInner,\r\n    shadowOutMain,\r\n    shadowInnerMain,\r\n    gradientColor,\r\n    gradientColorVert,\r\n    themeStyle,\r\n}) => {\r\n\r\n    const { colors } = useSelector(state => state.colors);\r\n    const { layout, main, text, disabled } = colors;\r\n\r\n    return (\r\n        <div\r\n            className='interfaceBoard' \r\n            style={{background: layout,\r\n                    boxShadow: shadowOut}}\r\n        >\r\n            <div className='interfaceBoardColumn'>\r\n                <MusicPlayer\r\n                    colors={colors}\r\n                    isNeuromorphic={isNeuromorphic}\r\n                    gradientColor={gradientColor}\r\n                    shadowOut={shadowOut}\r\n                    shadowOutMain={shadowOutMain}\r\n                    shadowInnerMain={shadowInnerMain}\r\n                />\r\n                <CheckBox \r\n                    main={main}\r\n                    isNeuromorphic={isNeuromorphic}\r\n                    gradientColor={gradientColor}\r\n                    shadowOutMain={shadowOutMain}\r\n                    shadowInnerMain={shadowInnerMain}\r\n                />\r\n                <TimeLine \r\n                    colors={colors}\r\n                    gradientColor={gradientColor}\r\n                    shadowOut={shadowOut}\r\n                />\r\n            </div>\r\n            <div className='interfaceBoardColumn'>\r\n                <div className='interfaceBoardColumn--top'>\r\n                    <div>\r\n                        <IconBage \r\n                            main={main}\r\n                            disabled={disabled}\r\n                            gradientColor={gradientColor}\r\n                            shadowOut={shadowOut}\r\n                        />\r\n                        <IconButton\r\n                            main={main}\r\n                            disabled={disabled}\r\n                            isNeuromorphic={isNeuromorphic}\r\n                            gradientColor={gradientColor}\r\n                            shadowInner={shadowInner}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <PillarBar\r\n                            gradientColorVert={gradientColorVert}\r\n                            shadowInner={shadowInner}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Pagination\r\n                    main={main}\r\n                    disabled={disabled}\r\n                    text={text}\r\n                    themeStyle={themeStyle}\r\n                    gradientColor={gradientColor}\r\n                    shadowOut={shadowOut}\r\n                    shadowInnerMain={shadowInnerMain}\r\n                />\r\n                <DropDown\r\n                    main={main}\r\n                    text={text}\r\n                    gradientColor={gradientColor}\r\n                    shadowColor={shadowColor}\r\n                    shadowInnerMain={shadowInnerMain}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InterfaceBoard;","export const THEMES = [\r\n    {\r\n        title: 'Deep Purple',\r\n        deletable: false,\r\n        colors: {\r\n            layout:\"#2f315a\",\r\n            main:\"#4b4e7c\",\r\n            disabled:\"#acb1f1\",\r\n            primary:\"#ea62c3\",\r\n            secondary:\"#794bec\",\r\n            text:\"#eaeef9\",\r\n        },\r\n    },\r\n    {\r\n        title: 'Blue Bubble Galaxy',\r\n        deletable: false,\r\n        colors: {\r\n            layout:\"#727586\",\r\n            main:\"#505569\",\r\n            disabled:\"#b9faff\",\r\n            primary:\"#6fecfe\",\r\n            secondary:\"#4799fd\",\r\n            text:\"#8fa4b9\",\r\n        },\r\n    },\r\n    {\r\n        title: 'Eco Theme',\r\n        deletable: false,\r\n        colors: {\r\n            layout:\"#e6e6e6\",\r\n            main:\"#fcfcfc\",\r\n            disabled:\"#d5f15e\",\r\n            primary:\"#86c481\",\r\n            secondary:\"#42b49b\",\r\n            text:\"#319c66\",\r\n        },\r\n    },\r\n    {\r\n        title: 'Coral',\r\n        deletable: false,\r\n        colors: {\r\n            layout:\"#e1e1e1\",\r\n            main:\"#ececec\",\r\n            disabled:\"#acacac\",\r\n            primary:\"#f75958\",\r\n            secondary:\"#fb7f81\",\r\n            text:\"#9c9c9c\",\r\n        },\r\n    },\r\n    {\r\n        title: 'Sunny',\r\n        deletable: false,\r\n        colors: {\r\n            layout:\"#f8f4eb\",\r\n            main:\"#fefefe\",\r\n            disabled:\"#b5b4b2\",\r\n            primary:\"#ffc85b\",\r\n            secondary:\"#fd7e51\",\r\n            text:\"#3c3c3c\",\r\n        },\r\n    },\r\n    {\r\n        title: 'Mild Purple',\r\n        deletable: false,\r\n        colors: {\r\n            layout:\"#ebe7ff\",\r\n            main:\"#ffffff\",\r\n            disabled:\"#c8c7ca\",\r\n            primary:\"#cbbeff\",\r\n            secondary:\"#af9fff\",\r\n            text:\"#8a8690\",\r\n        },\r\n    },\r\n]","import { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { colorsSetting, setDefaultColors } from '../ColorPanel/colorPanelSlice';\r\nimport { userThemesSetting, setActiveTheme } from './themeSidebarSlice';\r\nimport { THEMES } from '../../constants/themesConstants';\r\nimport Icon from '../Icon/Icon';\r\nimport styled from 'styled-components';\r\nimport './themeSidebar.scss';\r\n\r\nconst ThemeSidebar = ({gradientColor, shadowOut, shadowInnerMain}) => {\r\n    const { userThemes, activeTheme } = useSelector(state => state.themes);\r\n    const { themeStyle } = useSelector(state => state.themeStyle);\r\n    const { colors } = useSelector(state => state.colors);\r\n    const { main, disabled } = colors;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const themes = (Object.values(localStorage)).map(item => JSON.parse(item));\r\n    const themesList = [...THEMES, ...userThemes];\r\n\r\n    useEffect(() => {\r\n        dispatch(userThemesSetting(themes));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const onThemeChange = useCallback(\r\n        (theme) => {\r\n            dispatch(colorsSetting(theme.colors))\r\n        },[dispatch]);\r\n\r\n    const onThemeDelete = useCallback(\r\n        (theme) => {\r\n            localStorage.removeItem(theme.title);\r\n            const filteredThemes = userThemes.filter(item => item.title !== theme.title)\r\n            dispatch(userThemesSetting(filteredThemes));\r\n            dispatch(setDefaultColors());\r\n        },[dispatch, userThemes]);\r\n\r\n    const onActiveTheme = useCallback(\r\n        (item) => {\r\n            dispatch(setActiveTheme(item.title));\r\n        },[dispatch]);\r\n\r\n    const ThemeList = styled.ul`\r\n        &.neuromorphic {\r\n            li {\r\n                &.themeActive {\r\n                    background: transparent;\r\n                    box-shadow: ${shadowInnerMain};\r\n                }\r\n            }\r\n        }\r\n        li {\r\n            &.themeActive {\r\n                background: ${gradientColor};\r\n            }\r\n        }\r\n    `;\r\n\r\n    return (\r\n        <div \r\n            className=\"themeSidebar\"\r\n            style={{background: main,\r\n                    boxShadow: shadowOut}}\r\n        >\r\n            <ThemeList className={themeStyle}>\r\n                {themesList.map((item, index) => (\r\n                    <li \r\n                        className={activeTheme === item.title ? 'themeActive themeItem' : 'themeItem'}\r\n                        key={`${item.title}-${index}`}\r\n                        title={item.title}\r\n                        \r\n                        onClick={()=>{onActiveTheme(item)}}\r\n                    >\r\n                        <span \r\n                            onClick={() => {\r\n                                onThemeChange(item);\r\n                            }}\r\n                        >\r\n                            {item.title}\r\n                        </span>\r\n\r\n                        {item.deletable && (\r\n                            <Icon\r\n                                onClick={() => onThemeDelete(item)}\r\n                                name='trash'\r\n                                className='themeItemIcon'\r\n                                iconColor={disabled}\r\n                            />)\r\n                        }\r\n                    </li>\r\n                ))}\r\n            </ThemeList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeSidebar;","import { useSelector } from 'react-redux';\nimport { createBoxShadow } from '../../utils/drawFunctions';\nimport { gradient } from '../../constants/styleConstants';\nimport ColorPanel from '../ColorPanel/ColorPanel';\nimport InterfaceBoard from '../InterfaceBoard/InterfaceBoard';\nimport ThemeSidebar from '../ThemeSidebar/ThemeSidebar';\nimport './app.scss';\n\nconst App = () => {\n    const { colors }= useSelector(state => state.colors);\n    const {layout, main, primary, secondary, text } = colors;\n\n    const { themeStyle } = useSelector(state => state.themeStyle);\n\n    const isNeuromorphic = themeStyle === 'neuromorphic';\n\n    const buttonShadow = createBoxShadow(true, main);\n    const buttonShadowLayout = createBoxShadow(true, layout);\n\n    const shadowColor = isNeuromorphic ? createBoxShadow(true, primary) : 'none';\n    const shadowOut = isNeuromorphic ? createBoxShadow(true, layout) : 'none';\n    const shadowInner = isNeuromorphic ? createBoxShadow(false, layout) : 'none';\n\n    const shadowOutMain = isNeuromorphic ? createBoxShadow(true, main) : 'none';\n    const shadowInnerMain = isNeuromorphic ? createBoxShadow(false, main) : 'none';\n\n    const {linear, degrees, degreesVert, from, to} = gradient;\n    const gradientColor = `${linear}(${degrees}, ${primary} ${from}, ${secondary} ${to})`;\n    const gradientColorVert = `${linear}(${degreesVert}, ${primary} ${from}, ${secondary} ${to})`;\n\n    return (\n        <main \n            className=\"app\"\n            style={{background: `${layout}`,\n                    color: text,\n            }}\n        >\n            <div className=\"content\">\n                <ColorPanel\n                    isNeuromorphic={isNeuromorphic}\n                    shadowOut={shadowOut}\n                    shadowInner={shadowInner}\n                    shadowInnerMain={shadowInnerMain}\n                    shadowColor={shadowColor}\n                    gradientColor={gradientColor}\n                    buttonShadow={buttonShadow}\n                    buttonShadowLayout={buttonShadowLayout}\n                />\n                <div className=\"wrapper\">\n                    <ThemeSidebar\n                        gradientColor={gradientColor}\n                        shadowOut={shadowOut}\n                        shadowInnerMain={shadowInnerMain}\n                    />\n                    <InterfaceBoard\n                        isNeuromorphic={isNeuromorphic}\n                        shadowColor={shadowColor}\n                        shadowOut={shadowOut}\n                        shadowInner={shadowInner}\n                        shadowOutMain={shadowOutMain}\n                        shadowInnerMain={shadowInnerMain}\n                        gradientColor={gradientColor}\n                        gradientColorVert={gradientColorVert}\n                        themeStyle={themeStyle}\n                    />\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport colors from '../components/ColorPanel/colorPanelSlice';\nimport themes from '../components/ThemeSidebar/themeSidebarSlice';\nimport themeStyle from '../components/ThemeDesignSwitcher/themeDesignSwitcherSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {colors, themes, themeStyle},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}